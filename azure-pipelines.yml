trigger:
- main

pool:
  name: Default  # Replace with your pool name

steps:
# Debug step (from Step 1 above)
- task: PowerShell@2
  displayName: "Debug: Show agent directories"
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "=== Agent Directory Information ==="
      Write-Host "Agent.HomeDirectory: $(Agent.HomeDirectory)"
      Write-Host "Build.SourcesDirectory: $(Build.SourcesDirectory)"
      Write-Host "Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)"
      
      Write-Host "=== Directory Contents ==="
      Write-Host "Source directory contents:"
      Get-ChildItem "$(Build.SourcesDirectory)" | Format-Table Name, LastWriteTime

# Your existing steps to convert .sb3 to HTML (TurboWarp, etc.)
# ... (add your TurboWarp conversion steps here)

# Create ZIP in the Artifacts staging directory (not sources)
- task: PowerShell@2
  displayName: "Package site to ZIP"
  inputs:
    targetType: 'inline'
    script: |
      $sourceFolder = "$(Build.SourcesDirectory)\site"  # Assuming TurboWarp creates 'site' folder
      $zipPath = "$(Build.ArtifactStagingDirectory)\site.zip"
      
      Write-Host "Source folder: $sourceFolder"
      Write-Host "ZIP will be created at: $zipPath"
      
      if (Test-Path $sourceFolder) {
        Write-Host "Source folder exists. Contents:"
        Get-ChildItem $sourceFolder
        
        # Create ZIP
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::CreateFromDirectory($sourceFolder, $zipPath)
        
        Write-Host "ZIP created successfully at: $zipPath"
        Write-Host "ZIP file size: $((Get-Item $zipPath).Length) bytes"
      } else {
        Write-Error "Source folder does not exist: $sourceFolder"
        exit 1
      }

# Verify ZIP exists before extraction
- task: PowerShell@2
  displayName: "Verify ZIP exists"
  inputs:
    targetType: 'inline'
    script: |
      $zipPath = "$(Build.ArtifactStagingDirectory)\site.zip"
      Write-Host "Looking for ZIP at: $zipPath"
      
      if (Test-Path $zipPath) {
        Write-Host "✓ ZIP file found!"
        Write-Host "File size: $((Get-Item $zipPath).Length) bytes"
      } else {
        Write-Error "✗ ZIP file NOT found at expected location"
        Write-Host "Contents of ArtifactStagingDirectory:"
        Get-ChildItem "$(Build.ArtifactStagingDirectory)" | Format-Table Name, LastWriteTime
        exit 1
      }

# Extract ZIP from the Artifacts staging directory
- task: ExtractFiles@1
  displayName: "Extract site.zip"
  inputs:
    archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/site.zip'
    destinationFolder: '$(Build.SourcesDirectory)/extracted'
    cleanDestinationFolder: true

# Verify extraction
- task: PowerShell@2
  displayName: "Verify extraction"
  inputs:
    targetType: 'inline'
    script: |
      $extractedPath = "$(Build.SourcesDirectory)\extracted"
      Write-Host "Checking extracted content at: $extractedPath"
      
      if (Test-Path $extractedPath) {
        Write-Host "✓ Extraction successful! Contents:"
        Get-ChildItem $extractedPath -Recurse | Format-Table Name, LastWriteTime
      } else {
        Write-Error "✗ Extraction failed - no content found"
      }

# Continue with your Azure Static Web Apps deployment
# ... (add your deployment steps here)
